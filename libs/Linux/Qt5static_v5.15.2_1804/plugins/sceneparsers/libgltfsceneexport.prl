QMAKE_PRL_BUILD_DIR = /home/trackingsetup/Documents/qt5/qt3d/src/plugins/sceneparsers/gltfexport
QMAKE_PRO_INPUT = gltfexport.pro
QMAKE_PRL_TARGET = libgltfsceneexport.a
QMAKE_PRL_CONFIG = lex yacc depend_includepath testcase_targets import_qpa_plugin prepare_docs qt_docs_targets qt_build_extra file_copies qmake_use qt warn_on release link_prl incremental release static linux unix posix gcc sse2 aesni sse3 ssse3 sse4_1 sse4_2 avx avx2 avx512f avx512bw avx512cd avx512dq avx512er avx512ifma avx512pf avx512vbmi avx512vl compile_examples enable_new_dtags f16c largefile rdrnd shani x86SimdAlways prefix_build force_independent utf8_source create_prl link_prl no_private_qt_headers_warning QTDIR_build qt_example_installs exceptions_off testcase_exceptions explicitlib git_build plugin relative_qt_rpath create_cmake c++11 strict_c++ c++14 c++1z c99 c11 bsymbolic_functions hide_symbols have_target staticlib thread opengl moc resources gc_binaries dll
QMAKE_PRL_VERSION = 1.0.0
QMAKE_PRL_LIBS = $$[QT_INSTALL_LIBS]/libQt53DExtras.a $$[QT_INSTALL_LIBS]/libQt53DRender.a $$[QT_INSTALL_LIBS]/libQt53DInput.a $$[QT_INSTALL_LIBS]/libQt53DLogic.a $$[QT_INSTALL_LIBS]/libQt53DCore.a $$[QT_INSTALL_LIBS]/libQt5Gamepad.a $$[QT_INSTALL_LIBS]/libQt5Gui.a -lpng16 -lharfbuzz $$[QT_INSTALL_LIBS]/libQt5Network.a $$[QT_INSTALL_LIBS]/libQt5Concurrent.a $$[QT_INSTALL_LIBS]/libQt5Core.a -lm -lz -ldouble-conversion -licui18n -licuuc -licudata -ldl $$[QT_INSTALL_LIBS]/libqtpcre2.a -lgthread-2.0 -lglib-2.0 -lGL -lpthread
QMAKE_PRL_LIBS_FOR_CMAKE = $$[QT_INSTALL_LIBS]/libQt53DExtras.a;$$[QT_INSTALL_LIBS]/libQt53DRender.a;$$[QT_INSTALL_LIBS]/libQt53DInput.a;$$[QT_INSTALL_LIBS]/libQt53DLogic.a;$$[QT_INSTALL_LIBS]/libQt53DCore.a;$$[QT_INSTALL_LIBS]/libQt5Gamepad.a;$$[QT_INSTALL_LIBS]/libQt5Gui.a;-lpng16;-lharfbuzz;$$[QT_INSTALL_LIBS]/libQt5Network.a;$$[QT_INSTALL_LIBS]/libQt5Concurrent.a;$$[QT_INSTALL_LIBS]/libQt5Core.a;-lm;-lz;-ldouble-conversion;-licui18n;-licuuc;-licudata;-ldl;$$[QT_INSTALL_LIBS]/libqtpcre2.a;-lgthread-2.0;-lglib-2.0;-lGL;-lpthread;;;
